{"version":3,"sources":["Components/Snake.js","Components/Apple.js","Components/Score.js","index.js"],"names":["Snake","_this","this","snake","props","locations","map","location","index","react_default","a","createElement","key","className","style","width","dims","distRatio","height","margin","borderRadius","left","sx","top","sy","scoreHeight","React","Component","Apple","ax","ay","apple","newApple","Score","fontSize","scoreWidth","class","score","highScore","Game","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setDimensions","viewTop","document","documentElement","clientHeight","gameWidth","gameHeight","gameBorder","scoreBorder","viewLeft","clientWidth","spawnApple","applex","Math","floor","random","appley","i","length","setState","appleCollision","state","increment","pop","bodyWallCollisions","newScore","id","xv","yv","inStartDir","setInverseDir","invStartDir","moveSnake","obj","unshift","nextFrame","locals","dimensions","componentDidMount","intervalId","setInterval","handleKeyPress","event","keyCode","clearInterval","Components_Score","onKeyDown","tabIndex","Components_Snake","Components_Apple","ReactDOM","render","src_Game","getElementById"],"mappings":"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","file":"static/js/main.ae19c24b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Snake extends React.Component {\r\n  render () {\r\n\r\n    const snake = this.props.locations.map((location, index) => {\r\n      return(\r\n      <div \r\n        key={index} \r\n        className=\"snakepiece\" \r\n        style={{\r\n          width: this.props.dims.distRatio - 2 + 'px',\r\n          height: this.props.dims.distRatio - 4 + 'px',\r\n          margin: -this.props.dims.distRatio / 2 + 'px',\r\n          borderRadius: this.props.dims.distRatio * 0.4 + 'px',\r\n          // location = square*ratio + offset\r\n          left: location.sx * this.props.dims.distRatio + this.props.dims.distRatio/2 + 'px',\r\n          top: location.sy * this.props.dims.distRatio - this.props.dims.scoreHeight + this.props.dims.distRatio/2 + 'px'\r\n        }}\r\n      ></div>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <div>{snake}</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Snake;","import React from 'react';\r\n\r\nclass Apple extends React.Component {\r\n  newApple() {\r\n    return (\r\n      <div\r\n        className=\"apple\"\r\n        style={{\r\n          width: this.props.dims.distRatio - 4 + 'px',\r\n          height: this.props.dims.distRatio - 4 + 'px',\r\n          margin: -this.props.dims.distRatio / 2 - 2 + 'px',\r\n          borderRadius: this.props.dims.distRatio / 2 + 'px',\r\n          // Location = square*ratio + offset\r\n          left: this.props.ax * this.props.dims.distRatio + this.props.dims.distRatio*0.6 + 'px',\r\n          top: this.props.ay * this.props.dims.distRatio - this.props.dims.scoreHeight + this.props.dims.distRatio*0.6 + 'px'\r\n        }}\r\n      ></div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const apple = this.newApple();\r\n    return (\r\n      <div>{apple}</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Apple;","import React from 'react';\r\n\r\nclass Score extends React.Component {\r\n  \r\n  render () {\r\n    return (\r\n      <div\r\n        className=\"scoreboard\"\r\n        style={{\r\n          fontSize: 40 + 'px'\r\n        }}\r\n      >\r\n        <div \r\n          className=\"halfboard\" \r\n          style={{\r\n            width: this.props.dims.scoreWidth / 2,\r\n            height: this.props.dims.scoreHeight + 'px',\r\n          }}\r\n        >\r\n          <div className=\"board-word\" ><span class=\"taller\">Score</span></div>\r\n          <div className=\"board-num\" >{this.props.score}</div>\r\n        </div>\r\n        <div\r\n          className=\"halfboard\"\r\n          style={{\r\n            width: this.props.dims.scoreWidth / 2,\r\n            height: this.props.dims.scoreHeight + 'px',\r\n          }}\r\n        >\r\n          <div className=\"board-word\" ><span class=\"taller\">High Score</span></div>\r\n          <div className=\"board-num\" >{this.props.highScore}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Score;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Snake from './Components/Snake.js';\r\nimport Apple from './Components/Apple.js';\r\nimport Score from './Components/Score.js';\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n    this.state = {\r\n      // Apple location\r\n      ax: Math.floor( Math.random()*20 ),\r\n      ay: Math.floor( Math.random()*20 ),\r\n\r\n      // Locations of every piece of the snake\r\n      locations: [\r\n        {sx: 10, sy: 10, id: 5},\r\n        {sx: 10, sy: 11, id: 4},\r\n        {sx: 10, sy: 12, id: 3},\r\n        {sx: 10, sy: 13, id: 2},\r\n        {sx: 10, sy: 14, id: 1}\r\n      ],\r\n\r\n      // Snake velocity\r\n      xv: 0,\r\n      yv: 0,\r\n\r\n      // Inverted start direction\r\n        // stops snake from turning into itself (see keypress handle)\r\n      invStartDir: \"down\", \r\n\r\n      score: 0,\r\n      highScore: 0,\r\n\r\n      dimensions: this.setDimensions()\r\n    }\r\n  }\r\n\r\n  setDimensions = () => {\r\n    let gameWidth = 500,\r\n        gameHeight = gameWidth,\r\n        gameBorder = 8,\r\n        scoreBorder = 5,\r\n        scoreHeight = 110,\r\n        scoreWidth = (gameWidth + gameBorder*2) - (scoreBorder*4),\r\n        distRatio = gameWidth /20,\r\n        viewTop = (document.documentElement.clientHeight - (gameHeight + gameBorder*2 + scoreHeight + scoreBorder*3))/2,\r\n        viewLeft = (document.documentElement.clientWidth - (gameWidth + gameBorder*2))/2\r\n\r\n    let dimensions = {\r\n      gameWidth,\r\n      gameHeight,\r\n      gameBorder,\r\n\r\n      scoreBorder,\r\n      scoreHeight,\r\n      scoreWidth,\r\n\r\n      viewLeft,\r\n      viewTop,\r\n      distRatio\r\n    }\r\n\r\n    return dimensions;\r\n  }\r\n\r\n  spawnApple = location => {\r\n    let applex = Math.floor( Math.random() * 20);\r\n    let appley = Math.floor( Math.random() * 20);\r\n    // Prevent spawning on snake\r\n    for (let i = 0; i < location.length; i++) {\r\n      if (applex === location[i].sx && appley === location[i].sy) {\r\n        applex = Math.floor( Math.random()*20 );\r\n        appley = Math.floor( Math.random()*20 );\r\n        i = 0; // start test again\r\n      }\r\n    }\r\n    this.setState({\r\n      ax: applex,\r\n      ay: appley\r\n    })\r\n  }\r\n  appleCollision = location => {\r\n    if (\r\n      location[0].sx === (this.state.ax) &&\r\n      location[0].sy === (this.state.ay)\r\n      ) {\r\n      this.spawnApple(location);\r\n      // New apple and score++\r\n      var increment = this.state.score + 1;\r\n      this.setState({\r\n        score: increment\r\n      });\r\n    }\r\n    else { // delete tail piece if apple isn't eaten\r\n      location.pop(location.length - 1)\r\n    }\r\n\r\n  }\r\n  bodyWallCollisions = location => {\r\n    for (let i = 1; i < location.length; i++) {\r\n      if (  // Checks if head hits a body piece or a wall\r\n        (location[i].sx === location[0].sx &&\r\n        location[i].sy === location[0].sy) ||\r\n        location[0].sx < 0 || location[0].sx > 19 ||\r\n        location[0].sy < 0 || location[0].sy > 19\r\n      ) {\r\n        // If collision detected check if new high score\r\n        let newScore = 0;\r\n        if (this.state.score > this.state.highScore) {\r\n          newScore = this.state.score;\r\n        } else {\r\n          newScore = this.state.highScore;\r\n        }\r\n        // Reset game\r\n        this.setState({\r\n          locations: [\r\n            {sx: 10, sy: 10, id: 5},\r\n            {sx: 10, sy: 11, id: 4},\r\n            {sx: 10, sy: 12, id: 3},\r\n            {sx: 10, sy: 13, id: 2},\r\n            {sx: 10, sy: 14, id: 1}\r\n          ],\r\n          xv: 0,\r\n          yv: 0,\r\n          inStartDir: \"down\",\r\n          highScore: newScore,\r\n          score: 0,\r\n        })\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  setInverseDir = () => {\r\n    // Sets the inverse direction so snake can't turn into itself\r\n    if (this.state.yv === -1) this.setState({ invStartDir: \"down\" });\r\n    else if (this.state.yv === 1) this.setState({ invStartDir: \"up\" });\r\n    else if (this.state.xv === -1) this.setState({ invStartDir: \"right\" });\r\n    else if (this.state.xv === 1) this.setState({ invStartDir: \"left\" });\r\n  }\r\n  moveSnake = location => {\r\n    this.setInverseDir();\r\n    let obj = {\r\n      sx: location[0].sx + this.state.xv,\r\n      sy: location[0].sy + this.state.yv,\r\n      id: location[0].id + 1\r\n    };\r\n    location.unshift(obj);\r\n    return location;\r\n  }\r\n\r\n  // Calculations for every new frame\r\n  nextFrame = () => {\r\n    // Update location\r\n    let locals = this.state.locations;\r\n    locals = this.moveSnake(locals);\r\n\r\n    // Update dimensions if screen size changes\r\n    let dimensions = this.setDimensions();\r\n\r\n    // Collision tests\r\n      // if there is collision, skip rest of fnc\r\n    if (this.bodyWallCollisions(locals)) return;\r\n\r\n    // Apple eating test\r\n    this.appleCollision(locals);\r\n\r\n    // Save location after tests\r\n    this.setState({\r\n      locations: locals,\r\n      dimensions\r\n    });\r\n  }\r\n  componentDidMount = () => {\r\n    this.intervalId = setInterval(this.nextFrame, 1000/10);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalId);\r\n  }\r\n  handleKeyPress = event => {\r\n    if ((event.keyCode === 37) || (event.key === \"a\")) {\r\n      if (this.state.invStartDir !== \"left\"){\r\n        this.setState({\r\n          xv: -1,\r\n          yv: 0\r\n        });\r\n      }\r\n    } else if ((event.keyCode === 38) || (event.key === \"w\")) {\r\n      if (this.state.invStartDir !== \"up\"){\r\n        this.setState({\r\n          xv: 0,\r\n          yv: -1\r\n        });\r\n      }\r\n    } else if ((event.keyCode === 39) || (event.key === \"d\")) {\r\n      if (this.state.invStartDir !== \"right\"){\r\n        this.setState({\r\n          xv: 1,\r\n          yv: 0\r\n        });\r\n      }\r\n    } else if ((event.keyCode === 40) || (event.key === \"s\")) {\r\n      if (this.state.invStartDir !== \"down\"){\r\n        this.setState({\r\n          xv: 0,\r\n          yv: 1\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n      className=\"viewport\"\r\n      style={{\r\n        top: this.state.dimensions.viewTop,\r\n        left: this.state.dimensions.viewLeft\r\n      }}\r\n      >\r\n        <Score\r\n          score={this.state.score}\r\n          highScore={this.state.highScore}\r\n          dims={this.state.dimensions}\r\n        />\r\n        <div\r\n          className=\"game\"\r\n          onKeyDown={this.handleKeyPress}\r\n          tabIndex=\"0\"\r\n          style={{\r\n            width: this.state.dimensions.gameWidth,\r\n            height: this.state.dimensions.gameHeight,\r\n            top: (this.state.dimensions.scoreHeight + this.state.dimensions.scoreBorder*2)+ 'px',\r\n            left: (this.state.gameBorder) + 'px'\r\n          }}\r\n        >\r\n          <Snake\r\n            locations={this.state.locations}\r\n            dims={this.state.dimensions}\r\n          />\r\n          <Apple \r\n            ax={this.state.ax}\r\n            ay={this.state.ay}\r\n            dims={this.state.dimensions}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"))"],"sourceRoot":""}